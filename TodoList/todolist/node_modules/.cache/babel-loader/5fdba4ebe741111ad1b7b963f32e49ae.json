{"ast":null,"code":"var _jsxFileName = \"/Users/rajgogia/mini_projects/mini_projects/TodoList/todolist/src/App.js\";\nimport React from \"react\";\nimport TodoList from \"./TodoList/todolist\";\nimport AddTodo from \"./AddTodo/addtodo\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = async () => {\n      const todos = localStorage.getItem(\"todos\");\n\n      if (todos) {\n        const savedTodos = JSON.parse(todos);\n        await this.setState({\n          todos: savedTodos\n        });\n      } else {\n        console.log(\"No todos\");\n      }\n    };\n\n    this.addTodo = async todo => {\n      await this.setState({\n        todos: [...this.state.todos, todo, {\n          text: todo,\n          completed: false\n        }]\n      });\n      localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    };\n\n    this.updateTodo = todo => {\n      this.state.todos.map(_todo => {\n        if (todo === _todo) {\n          return {\n            text: todo.text,\n            completed: !completed\n          };\n        } else {\n          return _todo;\n        }\n      });\n    };\n\n    this.state = {\n      todos: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n        addTodoFn: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: this.state.todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rajgogia/mini_projects/mini_projects/TodoList/todolist/src/App.js"],"names":["React","TodoList","AddTodo","App","Component","constructor","componentDidMount","todos","localStorage","getItem","savedTodos","JSON","parse","setState","console","log","addTodo","todo","state","text","completed","setItem","stringify","updateTodo","map","_todo","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAgBdC,iBAhBc,GAgBM,YAAY;AAC9B,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,UAAIF,KAAJ,EAAW;AACT,cAAMG,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAnB;AACA,cAAM,KAAKM,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAAEG;AAAT,SAAd,CAAN;AACD,OAHD,MAGO;AACLI,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;AACF,KAxBa;;AAAA,SA0BdC,OA1Bc,GA0BJ,MAAOC,IAAP,IAAgB;AACxB,YAAM,KAAKJ,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKW,KAAL,CAAWX,KAAf,EAAsBU,IAAtB,EAC3B;AAACE,UAAAA,IAAI,EAAEF,IAAP;AAAaG,UAAAA,SAAS,EAAE;AAAxB,SAD2B;AAAT,OAAd,CAAN;AAGAZ,MAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BV,IAAI,CAACW,SAAL,CAAe,KAAKJ,KAAL,CAAWX,KAA1B,CAA9B;AACC,KA/BW;;AAAA,SAiCZgB,UAjCY,GAiCEN,IAAD,IAAU;AACrB,WAAKC,KAAL,CAAWX,KAAX,CAAiBiB,GAAjB,CAAqBC,KAAK,IAAI;AAC5B,YAAIR,IAAI,KAAKQ,KAAb,EAAmB;AACjB,iBAAO;AACLN,YAAAA,IAAI,EAAGF,IAAI,CAACE,IADP;AAELC,YAAAA,SAAS,EAAE,CAACA;AAFP,WAAP;AAID,SALD,MAMO;AACH,iBAAOK,KAAP;AACD;AACF,OAVH;AAWD,KA7CW;;AAEZ,SAAKP,KAAL,GAAa;AACXX,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDmB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAE,KAAKV;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWX;AAA5B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAf+B;;AAiDlC,eAAeJ,GAAf","sourcesContent":["import React from \"react\";\nimport TodoList from \"./TodoList/todolist\";\n\nimport AddTodo from \"./AddTodo/addtodo\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <AddTodo addTodoFn={this.addTodo}></AddTodo>\n        <TodoList todos={this.state.todos}></TodoList>\n      </div>\n    );\n  }\n\n  componentDidMount = async () => {\n    const todos = localStorage.getItem(\"todos\");\n    if (todos) {\n      const savedTodos = JSON.parse(todos);\n      await this.setState({ todos: savedTodos });\n    } else {\n      console.log(\"No todos\");\n    }\n  };\n\n  addTodo = async (todo) => {\n    await this.setState({ todos: [...this.state.todos, todo, \n      {text: todo, completed: false}] \n    });\n    localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    }\n\n    updateTodo = (todo) => {\n      this.state.todos.map(_todo => {\n        if (todo === _todo){\n          return {\n            text : todo.text,\n            completed: !completed\n          }\n        }\n          else {\n            return _todo;\n          }\n        });\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}